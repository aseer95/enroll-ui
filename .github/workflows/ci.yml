name: Test, Lint, Build

on:
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Use Node.js v12
        uses: actions/setup-node@v1.1.0
        with:
          node-version: '12.x'
      - name: Cache node modules
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit == 'false'
        run: npm i
      - name: Stylelint
        run: npx stylelint "**/*.scss"
      - name: Test
        run: npm run affected:lint -- --base=origin/master --parallel
      - name: The job has failed
        if: failure()
        run: echo "The linting job has failed!"
        env:
          CI: true
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   # needs: lint
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1.1.0
  #       with:
  #         node-version: '12.x'
  #     - name: Cache node modules
  #       uses: actions/cache@v1
  #       id: cache
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Install dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: npm ci
  #     - name: Test
  #       run: npm run affected:test -- --base=origin/master --parallel --bail=1
  #     - name: The job has failed
  #       if: failure()
  #       run: echo "The testing job has failed!"
  #       env:
  #         CI: true
  # e2e:
  #   name: e2e
  #   runs-on: ubuntu-latest
  #   # needs: test
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1.1.0
  #       with:
  #         node-version: '12.x'
  #     - name: Cache node modules
  #       uses: actions/cache@v1
  #       id: cache
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Install dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: npm ci
  #     - name: Test
  #       run: npm run affected:e2e -- --base=origin/master --headless --parallel
  #     - name: The job has failed
  #       if: failure()
  #       run: echo "The e2e job has failed!"
  #       env:
  #         CI: true
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1.1.0
  #       with:
  #         node-version: '12.x'
  #     - name: Cache node modules
  #       uses: actions/cache@v1
  #       id: cache
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Install dependencies
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: npm ci
  #     - name: Build Application
  #       run: npm run build:admin
  #     - name: The job has failed
  #       if: failure()
  #       run: echo "The build job has failed!"
  #       env:
  #         CI: true
  post_results:
    name: Post Results
    runs-on: ubuntu-latest
    # needs: [test, lint, e2e, build]
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Echo Results
        env: # https://stackoverflow.com/questions/59867124/how-can-i-access-github-action-environment-variables-within-a-bash-script-run-by
          SHA: ${{ github.sha }}
          BRANCH: ${{ github.ref }}
          YELLR_KEY: ${{ secrets.YELLR_KEY }}
          YELLR_URL: ${{ secrets.YELLR_URL }}
        run: ./post_build_results_ga.sh
